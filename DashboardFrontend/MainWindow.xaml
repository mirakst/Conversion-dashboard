<Window x:Class="DashboardFrontend.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:DashboardFrontend.ValueConverters"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        xmlns:ctx="clr-namespace:LiveChartsCore.Kernel;assembly=LiveChartsCore"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Conversion dashboard"
        Height="720"
        Width="1280"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        AllowsTransparency="True">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <!--Command bindings for window controls-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_1" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_2" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_3" />
    </Window.CommandBindings>
    <Window.Resources>
        <converters:ValidationStatusToImageConverter x:Key="StatusToImageConverter"/>
        <converters:SqlNotEmptyToBoolConverter x:Key="SqlToBoolConverter"/>
        <converters:ValidationTestCountToImageConverter x:Key="CountToImageConverter"/>
        <converters:IsValidationTestBoolConverter x:Key="IsValidationTestConverter"/>
        <converters:WindowStateToWingdingsConverter x:Key="WindowStateToWingdingsConverter"/>
        <converters:FilterPopupHeightConverter x:Key="FilterPopupHeightConverter"/>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{DynamicResource CanvasColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        </Style>
        <Style TargetType="{x:Type lvc:CartesianChart}">
            <Setter Property="Cursor" Value="Cross"/>
        </Style>
    </Window.Resources>
    <Border Background="{DynamicResource BackgroundColor}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Grid Background="{DynamicResource CanvasColor}"
                  Grid.Row="0"
                  Grid.ColumnSpan="2"
                  MouseLeftButtonDown="ControlGridClick">
                <TextBlock x:Name="TextBlockWindowTitle"
                           FontSize="14"
                           MinWidth="200"
                           TextAlignment="Center"
                           Margin="0, 4, 0, 0"
                           Foreground="{DynamicResource ForegroundColor}">
                    <TextBlock.Inlines>
                        <Run FontWeight="Bold" FontSize="14" Text="Conversion Dashboard" />
                    </TextBlock.Inlines>
                </TextBlock>
                <Grid Name="GridControlPanel"
                      Margin="20,35,20,0"
                      Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="8*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Button Name="ButtonStartStop"
                            Click="ButtonStartStopClick"
                            Grid.Column="0"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Style="{StaticResource DefaultButton}">
                        <Image>
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                            <Setter Property="Source" Value="/Icons/Stop.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                            <Setter Property="Source" Value="/Icons/Start.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>

                    <Button Name="ButtonSettings" 
                            Click="ButtonSettingsClick" 
                            Style="{StaticResource DefaultButton}"
                            Grid.Column="1" 
                            Grid.Row="0" 
                            Grid.RowSpan="2">
                        <Image Source="Icons/Cog.png"/>
                    </Button>

                    <TextBlock x:Name="TextBlockConversionName"
                               FontSize="28"
                               MinWidth="200"
                               TextAlignment="Center"
                               Margin="10, 0, 10, 0"
                               Grid.Column="2"
                               Grid.Row="0"
                               Grid.RowSpan="2"
                               Foreground="{DynamicResource ForegroundColor}"
                               Text="{Binding Controller.UserSettings.ActiveProfile.Conversion, FallbackValue='No profile set'}"/>
                    <Grid Grid.Column="3" 
                          Grid.RowSpan="3">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ProgressBar Name="ProgressBarExecutionProgress" 
                                     Margin="2"
                                     Minimum="0"
                                     Maximum="100"
                                     Grid.ColumnSpan="3"
                                     Value="{Binding CurrentProgress}"/>
                        <TextBlock Text="{Binding ElementName=ProgressBarExecutionProgress, Path=Value, StringFormat=Execution: {0:0}%}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>

                        <StackPanel Orientation="Horizontal"
                                    Grid.Row="1"
                                    Margin="0 4 0 0"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left">
                            <TextBlock Grid.Row="1"
                                   HorizontalAlignment="Right"
                                   Text="Status: "
                                   Foreground="LightGray"
                                   FontWeight="Bold"/>
                            <TextBlock Grid.Row="1"
                                   Grid.Column="1"
                                   Text="{Binding CurrentStatus}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"
                                   Foreground="LightGray"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Margin="30,20,30,30"
                  Background="{DynamicResource BackgroundColor}"
                  Grid.Row="1"
                  Grid.ColumnSpan="2">

                <Grid x:Name="gridManagerList"
                      Grid.Row="0"
                      Grid.Column="0"
                      Margin="0,0,20,20"
                      DataContext="{Binding ManagerViewModel}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="4.5*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="22*"/>
                    </Grid.RowDefinitions>

                    <ComboBox Margin="0 0 2 2"  
                              ToolTip="Choose which execution to show data from" 
                              Style="{DynamicResource ComboBoxExecutions}"  
                              ItemsSource="{Binding Executions}"  
                              SelectedItem="{Binding SelectedExecution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Id, StringFormat='Execution {0}'}"  
                                           VerticalAlignment="Center" 
                                           Foreground="{DynamicResource ForegroundColor}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBox Name="textboxManagerSearchbar"
                             Text="{Binding ManagerSearch, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Search by manager Name or ID"
                             Style="{DynamicResource ValidationsSearchBox}"
                             Height="26"
                             Grid.Column="1"
                             Grid.ColumnSpan="2"
                             Margin="0,0,0,1"
                             BorderBrush="{DynamicResource BorderColor}">
                    </TextBox>

                    <DockPanel LastChildFill="False"
                               Grid.Column="2">
                        <Image Source="Icons/Magnifyingglass.png"
                               Margin="0,5,10,5"
                               DockPanel.Dock="Right"/>
                    </DockPanel>


                    <Button Name="ButtonDetachManager"
                            Click="DetachManagerButtonClick"
                            Grid.Column="3"
                            Margin="0, -2, -2, 0"
                            Style="{StaticResource DetachButton}">
                        <Image Source="Icons/Detach.png"/>
                    </Button>

                    <DataGrid x:Name="datagridManagers"
                              ItemsSource="{Binding Managers}"
                              Grid.Row="1"
                              Grid.ColumnSpan="4"
                              Style="{DynamicResource DefaultDatagrid}"
                              BorderBrush="{DynamicResource BorderColor}"
                              MouseDoubleClick="DatagridManagers_MouseDoubleClick"
                              HorizontalScrollBarVisibility="Hidden"
                              HorizontalAlignment="Left">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" 
                                                Binding="{Binding Manager.ContextId}"
                                                Width="32pt"/>
                            <DataGridTextColumn Header="Manager name" 
                                                Binding="{Binding Manager.ShortName}"
                                                Width="8*"/>
                            <DataGridTextColumn Header="PS" 
                                                Binding="{Binding Manager.PerformanceScore, StringFormat='\{0:0\}', TargetNullValue='N/A'}"
                                                Width="1.3*"/>
                            <DataGridTextColumn Header="VS" 
                                                Binding="{Binding Manager.ValidationScore, StringFormat='\{0:0\}', TargetNullValue='N/A'}"
                                                Width="1.3*"/>
                            <DataGridTextColumn Header="Status" 
                                                Binding="{Binding Manager.Status}"
                                                Width="2*"/>
                        </DataGrid.Columns>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="ToolTip" Value="Double click to open view"/>
                                <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>

                <Grid Name="GridLog" 
                      Margin="20,0,0,20"
                      Grid.Column="1" 
                      Grid.Row="0"
                      DataContext="{Binding LogViewModel}">
                    <Grid Grid.Row="0"
                          Margin="-4, 0, 0, 4">
                        <ToggleButton Name="ToggleButtonLogInfo"
                                      Grid.Column="0"
                                      IsChecked="{Binding ShowInfo}"
                                      Style="{DynamicResource DefaultToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Info.png"
                                       Width="13"
                                       Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding InfoCount}"/>
                                <TextBlock Text=" Messages"/>
                            </StackPanel>
                        </ToggleButton>

                        <Rectangle Width="1"
                                   Fill="{DynamicResource BorderColor}"
                                   Grid.Column="1"
                                   HorizontalAlignment="Center"/>
                        <ToggleButton Name="ToggleButtonLogWarning"
                                      Grid.Column="2"
                                      IsChecked="{Binding ShowWarn}"
                                      Style="{DynamicResource DefaultToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Warning.png"
                                       Width="13"
                                       Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding WarnCount}"/>
                                <TextBlock Text=" Warnings"/>
                            </StackPanel>
                        </ToggleButton>

                        <Rectangle Width="1"
                                   Fill="{DynamicResource BorderColor}"
                                   Grid.Column="3"/>
                        <ToggleButton Name="ToggleButtonLogError"
                                      Grid.Column="4"
                                      IsChecked="{Binding ShowError}"
                                      Style="{DynamicResource DefaultToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Error.png"
                                       Width="13"
                                       Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding ErrorCount}"/>
                                <TextBlock Text=" Errors"/>
                            </StackPanel>
                        </ToggleButton>

                        <Rectangle Width="1"
                                   Fill="{DynamicResource BorderColor}"
                                   Grid.Column="5"/>
                        <ToggleButton Name="ToggleButtonLogFatal"
                                      Grid.Column="6"
                                      IsChecked="{Binding ShowFatal}"
                                      Style="{DynamicResource DefaultToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Fatal.png"
                                       Width="13"
                                       Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding FatalCount}"/>
                                <TextBlock Text=" Fatal"/>
                            </StackPanel>
                        </ToggleButton>

                        <Rectangle Width="1"
                                   Fill="{DynamicResource BorderColor}"
                                   Grid.Column="7"/>
                        <ToggleButton Name="ToggleButtonLogValidation"
                                      Grid.Column="8"
                                      IsChecked="{Binding ShowValidation}"
                                      Style="{DynamicResource DefaultToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Icons/Validation.png" 
                                       Width="13"
                                       Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding ValidationCount}"/>
                                <TextBlock Text=" Validation"/>
                            </StackPanel>
                        </ToggleButton>

                        <ToggleButton Name="ButtonLogFilter"
                                Grid.Column="9"
                                Style="{DynamicResource FilterButton}"
                                Margin="0, 0, 0, -1">
                            <Image Source="Icons/Filter.png"/>
                        </ToggleButton>

                        <Button Name="ButtonLogDetach" 
                                Click="DetachLogButtonClick" 
                                Grid.Column="10"
                                Style="{DynamicResource DetachButton}"
                                Margin="0, -2, -2, -2">
                            <Image Source="Icons/Detach.png"/>
                        </Button>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.Resources>
                            <converters:WidthCalculationMultiConverter x:Key="lastColumnResizeConverter"/>
                        </Grid.Resources>
                        <ListView x:Name="ListViewLog"
                                  ItemsSource="{Binding MessageView}"
                                  Background="{DynamicResource BackgroundColor}"
                                  VirtualizingPanel.ScrollUnit="Pixel"
                                  VirtualizingPanel.IsVirtualizing="True"
                                  VirtualizingPanel.VirtualizationMode="Recycling"
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                  MouseEnter="ListViewLog_MouseOverChanged"
                                  MouseLeave="ListViewLog_MouseOverChanged"
                                  Margin="0,-2,0,0">
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                                        <StackPanel Orientation="Vertical">
                                                            <TextBlock Text="{TemplateBinding Content}" 
                                                                   Padding="4" 
                                                                   Background="{DynamicResource BackgroundColor}" 
                                                                   Width="{TemplateBinding Width}" 
                                                                   TextAlignment="Left"
                                                                   Foreground="{DynamicResource ForegroundColor}"

                                                                   TextWrapping="Wrap"/>
                                                            <Separator/>
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="Date"
                                                    DisplayMemberBinding="{Binding Date,StringFormat=dd/MM HH:mm:ss}"
                                                    Width="120"/>
                                    <GridViewColumn Header="ID" 
                                                    DisplayMemberBinding="{Binding ContextId}"
                                                    Width="40"/>
                                    <GridViewColumn Header="Type" 
                                                    Width="90">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap"
                                                           Text="{Binding Type}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Content">
                                        <GridViewColumn.Width>
                                            <MultiBinding Converter="{StaticResource lastColumnResizeConverter}">
                                                <Binding Path="ActualWidth" 
                                                         RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                                <Binding Path="View.Columns" 
                                                         RelativeSource="{RelativeSource AncestorType=ListView}"/>
                                            </MultiBinding>
                                        </GridViewColumn.Width>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap"
                                                           Text="{Binding Content}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                                    <Setter Property="FontFamily" Value="Consolas"/>
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="ToolTip" Value="{Binding ManagerName, TargetNullValue='Context not found'}"/>
                                    <Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="Info">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageInfoColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Warning">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageWarningColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Fatal">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageFatalForegroundColor}"/>
                                            <Setter Property="Background" Value="{DynamicResource LogMessageFatalBackgroundColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Validation">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageValidationColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Error">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageErrorForegroundColor}"/>
                                            <Setter Property="Background" Value="{DynamicResource LogMessageErrorBackgroundColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="Error, Validation">
                                            <Setter Property="Foreground" Value="{DynamicResource LogMessageErrorForegroundColor}"/>
                                            <Setter Property="Background" Value="{DynamicResource LogMessageErrorBackgroundColor}"/>
                                        </DataTrigger>
                                        <Trigger Property="Control.IsMouseOver" Value="True">
                                            <Setter Property="Control.Background" Value="{DynamicResource LogBackgroundHighlightedBackgroundColor}"/>
                                            <Setter Property="Control.Foreground" Value="{DynamicResource LogBackgroundHighlightedForegroundColor}"/>
                                            <Setter Property="Control.BorderBrush" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <Grid x:Name="GridPopupLogFilter" 
                              Style="{DynamicResource GridPopupStyleOverwrite}"
                              IsVisibleChanged="GridPopup_Opened"
                              Margin="0,-2,0,1">
                            <Border Style="{DynamicResource GridPopupBorderOverwrite}">
                                <StackPanel HorizontalAlignment="Center" Margin="10,5">
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}">Execution filter</TextBlock>
                                    <ComboBox Width="100"
                                      Height="26"
                                      Margin="0,0,18,10"
                                      VerticalAlignment="Top"
                                      Style="{DynamicResource ComboBoxExecutions}" 
                                      ItemsSource="{Binding Executions}" 
                                      SelectedItem="{Binding SelectedExecution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Id, StringFormat='Execution {0}'}" 
                                                       VerticalAlignment="Center"
                                                       Foreground="White"/>
                                                    <!--<TextBlock Text="{Binding StartTime, StringFormat=' ({0:dd/MM HH:mm})'}" 
                                                               VerticalAlignment="Center"
                                                               Foreground="LightGray"/>-->
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <TextBlock Foreground="{DynamicResource ForegroundColor}">Context ID filter</TextBlock>
                                    <ItemsControl Style="{DynamicResource GridPopupItemsControlOverwrite}"
                                          Height="{Binding ActualHeight, ElementName=ListViewLog, Converter={StaticResource FilterPopupHeightConverter}}" 
                                          ItemsSource="{Binding SelectedExecution.Managers}">
                                        <ItemsControl.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                                      Background="{DynamicResource BackgroundColor}">
                                                    <ItemsPresenter/>
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <CheckBox Click="ContextIdCheckbox_OnToggle" 
                                                  IsChecked="{Binding IsChecked}" 
                                                  Content="{Binding ContextId}" 
                                                  Foreground="{DynamicResource ForegroundColor}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="Disable all" 
                                        Margin="0,0,5,0" 
                                        Click="ContextIdFilter_OnClick" 
                                        Tag="false"/>
                                        <Button Content="Enable all" 
                                        Click="ContextIdFilter_OnClick" 
                                        Tag="true"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                </Grid>

                <!-- Validation Report Component -->
                <Grid Name="gridValidationReport"
                      DataContext="{Binding ValidationReportViewModel}"
                      Margin="0,0,20,0"
                      Grid.Column="0"
                      Grid.Row="1">

                    <!-- Body -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4.5*" MinWidth="355"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="2*" MinWidth="100"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <GridSplitter Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      Width="4"
                                      Height="100"
                                      Background="{DynamicResource BorderColor}"/>

                        <!-- Validations TreeView Header -->
                        <Grid>
                            <TextBlock Text="Validations"
                                       Margin="5"
                                       Foreground="{DynamicResource HeaderForegroundColor}"
                                       FontWeight="Bold"/>
                            <StackPanel Grid.Column="1"
                                        Orientation="Horizontal" 
                                        HorizontalAlignment="Right">
                                <ToggleButton Style="{DynamicResource DefaultToggleButton}"
                                              IsChecked="{Binding ShowEmpty,UpdateSourceTrigger=PropertyChanged}"
                                              Margin="0,2,0,2">
                                    <TextBlock Text="Show empty"
                                                Padding="6"
                                                VerticalAlignment="Center"/>
                                </ToggleButton>
                                <ToggleButton Style="{DynamicResource DefaultToggleButton}"
                                              IsChecked="{Binding ShowOk,UpdateSourceTrigger=PropertyChanged}"
                                              Margin="0,2,0,2">
                                    <StackPanel Orientation="Horizontal" Margin="6 0 6 0">
                                        <Image Source="/Icons/Validation.png"
                                               Margin="0 0 2 0"
                                               MaxHeight="20"/>
                                        <TextBlock Text="{Binding SelectedExecution.OkTotalCount,FallbackValue='N/A'}"
                                                   VerticalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton Style="{DynamicResource DefaultToggleButton}"
                                              IsChecked="{Binding ShowDisabled,UpdateSourceTrigger=PropertyChanged}"
                                              Margin="0, 2, 0, 2">
                                    <StackPanel Orientation="Horizontal" Margin="6 0 6 0">
                                        <Image Source="/Icons/Warning.png"
                                               Margin="0 0 2 0"
                                               MaxHeight="20"/>
                                        <TextBlock Text="{Binding SelectedExecution.DisabledTotalCount,FallbackValue='N/A'}"
                                                   VerticalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton Style="{DynamicResource DefaultToggleButton}"
                                              IsChecked="{Binding ShowFailed,UpdateSourceTrigger=PropertyChanged}"
                                              Margin="0,2,0,2">
                                    <StackPanel Orientation="Horizontal" Margin="6 0 6 0">
                                        <Image Source="/Icons/Fatal.png"
                                               Margin="0 0 2 0"
                                               MaxHeight="20"/>
                                        <TextBlock Text="{Binding SelectedExecution.FailedTotalCount,FallbackValue='N/A'}"
                                                   VerticalAlignment="Center"/>
                                    </StackPanel>
                                </ToggleButton>
                                <TextBlock Text="{Binding SelectedExecution.TotalCount,FallbackValue='N/A',StringFormat='(of {0})'}"
                                            VerticalAlignment="Center"
                                            Padding="6"
                                            Foreground="Gray"/>
                            </StackPanel>
                        </Grid>
                        <!-- Validations TreeView -->
                        <Border Grid.Row="1" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1">
                            <Grid Background="{DynamicResource CanvasColor}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <ComboBox Margin="2" 
                                          Style="{DynamicResource ComboBoxExecutions}" 
                                          ItemsSource="{Binding Executions}" 
                                          SelectedItem="{Binding SelectedExecution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Id, StringFormat='Execution {0}'}" 
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource ForegroundColor}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                
                                <TextBox x:Name="TextBoxValidationsSearchBar"
                                         Grid.Column="1"
                                         Margin="2"
                                         Style="{DynamicResource ValidationsSearchBox}"
                                         Text="{Binding NameFilter, UpdateSourceTrigger=PropertyChanged}"
                                         ToolTip="Search for managers by their name or context ID"/>

                                <Image Source="/Icons/Magnifyingglass.png"
                                       Grid.Column="1"
                                       HorizontalAlignment="Right"
                                       Margin="0 0 5 0"
                                       Width="20"/>

                                <TreeView Grid.Row="1"
                                          Grid.ColumnSpan="2"
                                          Name="TreeViewValidations"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          ItemsSource="{Binding ManagerView}"
                                          VirtualizingPanel.IsVirtualizing="True"
                                          VirtualizingPanel.VirtualizationMode="Recycling"
                                          VirtualizingPanel.ScrollUnit="Pixel"
                                          TreeViewItem.Expanded="TreeViewValidations_Expanded"
                                          TreeViewItem.Collapsed="TreeViewValidations_Collapsed">
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding ValidationView}">
                                            <StackPanel Orientation="Horizontal" 
                                                        Height="20">
                                                <Image Source="{Binding Converter={StaticResource CountToImageConverter}}"
                                                       Margin="0 0 4 0"/>
                                                <TextBlock Text="{Binding Name}" 
                                                           VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding ContextId, StringFormat=' (ID {0})'}"
                                                           VerticalAlignment="Center"
                                                           Foreground="{DynamicResource HeaderForegroundColor}"/>
                                            </StackPanel>
                                            <HierarchicalDataTemplate.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" 
                                                                Height="20" 
                                                                Margin="0 5 0 0">
                                                        <Image Source="{Binding Converter={StaticResource StatusToImageConverter}}"
                                                               Margin="10 0 5 0"/>
                                                        <TextBlock Text="{Binding Name}" 
                                                                   VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </HierarchicalDataTemplate.ItemTemplate>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                    <TreeView.Resources>
                                        <Style TargetType="TreeViewItem">
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                                            <Setter Property="MinHeight" Value="25"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={StaticResource IsValidationTestConverter}}" Value="False">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.Resources>
                                </TreeView>
                            </Grid>
                        </Border>

                        <Grid Grid.Column="2">
                            <TextBlock Text="Details"
                                       Margin="0 5 5 5"
                                       Foreground="{DynamicResource HeaderForegroundColor}"
                                       FontWeight="Bold"/>
                            <Button Name="ButtonValidationReportDetach" 
                                    Click="DetachValidationReportButtonClick"
                                    HorizontalAlignment="Right"
                                    Margin="0, 0, -2, 0"
                                    Style="{StaticResource DetachButton}">
                                <Image Source="/Icons/Detach.png"/>
                            </Button>
                        </Grid>
                        <Border BorderBrush="{DynamicResource BorderColor}"
                                BorderThickness="1"
                                Grid.Row="1"
                                Grid.Column="2">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Vertical" 
                                            Background="{DynamicResource CanvasColor}"
                                            DataContext="{Binding ElementName=TreeViewValidations, Path=SelectedItem}">
                                    <TextBlock Text="Description" 
                                               FontWeight="Bold" 
                                               Margin="10 10 10 0"
                                               Foreground="{DynamicResource HeaderForegroundColor}"/>
                                    <TextBlock Text="{Binding Name, FallbackValue='No active selection'}"
                                               Margin="10 0 10 0"/>
                                    
                                    <TextBlock Text="Toolkit ID"
                                               FontWeight="Bold"
                                               Margin="10 20 10 0"
                                               Foreground="{DynamicResource HeaderForegroundColor}"/>
                                    <TextBlock Text="{Binding ToolkitId, TargetNullValue='N/A'}"
                                               Margin="10 0 10 0"/>

                                    <TextBlock Text="Result" 
                                               FontWeight="Bold" 
                                               Foreground="{DynamicResource HeaderForegroundColor}"
                                               Margin="10 20 10 0"/>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="10 0 10 0">
                                        <Image Width="20">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Converter={StaticResource IsValidationTestConverter}}" Value="True">
                                                            <Setter Property="Source" Value="{Binding Converter={StaticResource StatusToImageConverter}}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock Text="{Binding Status}"
                                                   Margin="5 0 0 0"
                                                   VerticalAlignment="Center"/>
                                    </StackPanel>
                                        
                                    <TextBlock Text="Row count" 
                                               FontWeight="Bold" 
                                               Margin="10 20 10 0"
                                               Foreground="{DynamicResource HeaderForegroundColor}"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Source "
                                                   Foreground="{DynamicResource HeaderForegroundColor}"
                                                   Margin="10 0 5 0"/>
                                        <TextBlock Text="{Binding SrcCount, TargetNullValue='N/A'}"
                                                   Margin="0 0 10 0"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Destination "
                                                   Foreground="{DynamicResource HeaderForegroundColor}"
                                                   Margin="10 0 5 0"/>
                                        <TextBlock Text="{Binding DstCount, TargetNullValue='N/A'}"
                                                   Margin="0 0 10 0"/>
                                    </StackPanel>

                                    <TextBlock Text="Copy SQL"
                                               FontWeight="Bold"
                                               Foreground="{DynamicResource HeaderForegroundColor}"
                                               Margin="10 20 10 10"/>
                                    <WrapPanel Orientation="Horizontal"
                                                Margin="10 5 10 10">
                                        <Button Margin="0 0 20 0"
                                                Click="CopySrcSql_Click"
                                                MouseLeave="ButtonCopySql_MouseLeave"
                                                IsEnabled="{Binding SrcSql, Converter={StaticResource SqlToBoolConverter}, FallbackValue=False}"
                                                Template="{DynamicResource CopySqlButton}"
                                                Content="Source"/>
                                        <Button Click="CopyDestSql_Click"
                                                MouseLeave="ButtonCopySql_MouseLeave"
                                                IsEnabled="{Binding DstSql, Converter={StaticResource SqlToBoolConverter}, FallbackValue=False}"
                                                Template="{DynamicResource CopySqlButton}"
                                                Content="Destination"/>

                                        <Popup x:Name="PopupCopySql"
                                               Placement="Mouse">
                                            <Border BorderBrush="{DynamicResource BorderColor}"
                                                    BorderThickness="1">
                                                <Label x:Name="TextBlockPopupSql"
                                                       Style="{DynamicResource PopupLabel}"/>
                                            </Border>
                                        </Popup>
                                    </WrapPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                        </Style>
                                        <Style TargetType="Button">
                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Setter Property="Width" Value="80"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="Gray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Resources>
                                </StackPanel>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Grid>
                <Grid Name="GridHealthReportChartGrid"
                      Margin="20,0,0,0"
                      Grid.Column="1"
                      Grid.Row="1">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TabControl Background="{DynamicResource BackgroundColor}"
                                BorderBrush="{DynamicResource BorderColor}"
                                DataContext="{Binding HealthReportViewModel}"
                                Grid.ColumnSpan="3"
                                Grid.RowSpan="2"
                                Margin="0,0,0,0">

                        <TabItem Style="{DynamicResource TabItemStyleOverwrite}"
                                    Name="TabItemCpuRam"
                                    Header="CPU &amp; RAM"
                                    Height="28"
                                    FontSize="16"
                                    Margin="-2,0,0,0"
                                    DataContext="{Binding SystemLoadChart}">
                            <Border Margin="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Name="TextBlockCurrentCpuLoad"
                                                Text="{Binding LastPrimaryReading,
                                                        StringFormat='CPU Usage: {0:0}%'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                Margin="0,0,40,5"/>

                                    <TextBlock Name="TextBlockCurrentRamUsage"
                                                Text="{Binding LastSecondaryReading,
                                                        StringFormat='RAM Usage: {0:0}%'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="2"
                                                Grid.Row="0"
                                                Margin="5,0,0,5"/>

                                    <Separator Grid.ColumnSpan="2"
                                    VerticalAlignment="Bottom"
                                    Grid.Column="1"
                                    Margin="-50,0"/>

                                    <lvc:CartesianChart
                                            Margin="-7,0,5,-40"
                                            Series="{Binding ChartData.Series}"
                                            XAxes="{Binding ChartData.XAxis}"
                                            YAxes="{Binding ChartData.YAxis}"
                                            ZoomMode="X"
                                            TooltipPosition="Top"
                                            MouseLeave="CartesianChart_MouseLeave"
                                            MouseEnter="CartesianChart_MouseEnter"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="4"
                                            Grid.Row="1">
                                    </lvc:CartesianChart>
                                </Grid>
                            </Border>
                        </TabItem>

                        <TabItem Style="{DynamicResource TabItemStyleOverwrite}"
                                    Name="TabItemNetwork"
                                    Header="Network"
                                    Height="28"
                                    FontSize="16"
                                    DataContext="{Binding NetworkChart}">
                            <Border Margin="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Name="TextBlockCurrentNetSent"
                                                Text="{Binding LastPrimaryReading,
                                                        StringFormat='Network data sent: {0:0}GB'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                Margin="0,0,40,5"/>

                                    <TextBlock Name="TextBlockCurrentNetReceived"
                                                Text="{Binding LastSecondaryReading,
                                                        StringFormat='Network data received: {0:0}GB'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="2"
                                                Grid.Row="0"
                                                Margin="5,0,0,5"/>

                                    <Separator Grid.ColumnSpan="2"
                                    VerticalAlignment="Bottom"
                                    Grid.Column="1"
                                    Margin="-50,0"/>

                                    <lvc:CartesianChart
                                            Margin="-7,0,5,-40"
                                            Series="{Binding ChartData.Series}"
                                            XAxes="{Binding ChartData.XAxis}"
                                            YAxes="{Binding ChartData.YAxis}"
                                            ZoomMode="X"
                                            TooltipPosition="Top"
                                            MouseLeave="CartesianChart_MouseLeave"
                                            MouseEnter="CartesianChart_MouseEnter"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="4"
                                            Grid.Row="1">
                                    </lvc:CartesianChart>
                                </Grid>
                            </Border>
                        </TabItem>
                        <TabItem Style="{DynamicResource TabItemStyleOverwrite}"
                                    Name="TabItemNetworkDelta"
                                    Header="Network Delta"
                                    Height="28"
                                    FontSize="16"
                                    DataContext="{Binding NetworkDeltaChart}">
                            <Border Margin="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Name="TextBlockCurrentNetSendDelta"
                                                Text="{Binding LastPrimaryReading,
                                                        StringFormat='Network data sent (Delta): {0:0}MB'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                Margin="0,0,40,5"/>

                                    <TextBlock Name="TextBlockCurrentNetReceiveDelta"
                                                Text="{Binding LastSecondaryReading,
                                                        StringFormat='Network received (Delta): {0:0}MB'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="2"
                                                Grid.Row="0"
                                                Margin="5,0,0,5"/>

                                    <Separator Grid.ColumnSpan="2"
                                    VerticalAlignment="Bottom"
                                    Grid.Column="1"
                                    Margin="-50,0"/>

                                    <lvc:CartesianChart
                                            Margin="-7,0,5,-40"
                                            Series="{Binding ChartData.Series}"
                                            XAxes="{Binding ChartData.XAxis}"
                                            YAxes="{Binding ChartData.YAxis}"
                                            ZoomMode="X"
                                            TooltipPosition="Top"
                                            MouseLeave="CartesianChart_MouseLeave"
                                            MouseEnter="CartesianChart_MouseEnter"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="4"
                                            Grid.Row="1">
                                    </lvc:CartesianChart>
                                </Grid>
                            </Border>
                        </TabItem> 

                        <TabItem Style="{DynamicResource TabItemStyleOverwrite}"
                                    Name="TabItemNetworkSpeed"
                                    Header="Network Speed"
                                    Height="28"
                                    FontSize="16"
                                    DataContext="{Binding NetworkSpeedChart}">
                            <Border Margin="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Name="TextBlockCurrentNetSendSpeed"
                                                Text="{Binding LastPrimaryReading,
                                                        StringFormat='Network send speed: {0:0.00}Mbps'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                Margin="0,0,40,5"/>

                                    <TextBlock Name="TextBlockCurrentNetReceiveSpeed"
                                                Text="{Binding LastSecondaryReading,
                                                        StringFormat='Network receive speed: {0:0.00}Mbps'}"
                                                Foreground="{DynamicResource ForegroundColor}"
                                                FontSize="14"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Grid.Column="2"
                                                Grid.Row="0"
                                                Margin="5,0,0,5"/>

                                    <Separator Grid.ColumnSpan="2"
                                    VerticalAlignment="Bottom"
                                    Grid.Column="1"
                                    Margin="-50,0"/>

                                    <lvc:CartesianChart
                                            Margin="-7,0,5,-40"
                                            Series="{Binding ChartData.Series}"
                                            XAxes="{Binding ChartData.XAxis}"
                                            YAxes="{Binding ChartData.YAxis}"
                                            ZoomMode="X"
                                            TooltipPosition="Top"
                                            MouseLeave="CartesianChart_MouseLeave"
                                            MouseEnter="CartesianChart_MouseEnter"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="4"
                                            Grid.Row="1">
                                    </lvc:CartesianChart>
                                </Grid>
                            </Border>
                        </TabItem>
                    </TabControl>

                    <ComboBox Name="ComboBoxMaxView"
                              VerticalAlignment="Center"
                              Grid.Column="1"
                              SelectionChanged="ComboBox_SelectionChanged"
                              Height="26">
                        <ComboBoxItem Content="30 Min" Tag="30"/>
                        <ComboBoxItem Content="1 Hour" Tag="60" IsSelected="True"/>
                        <ComboBoxItem Content="2 Hours" Tag="120"/>
                        <ComboBoxItem Content="6 Hours" Tag="360"/>
                        <ComboBoxItem Content="12 Hours" Tag="720"/>
                        <ComboBoxItem Content="24 Hours" Tag="1440"/>
                    </ComboBox>
                    <Button Name="ButtonHealthReportDetach"
                            Click="DetachHealthReportButtonClick"
                            Grid.Column="3"
                            Style="{StaticResource DetachButton}"
                            Margin="0, 0, -2, 0">
                        <Image Source="/Icons/Detach.png" VerticalAlignment="center"/>
                    </Button>
                </Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
            </Grid>

            <Grid Name="WindowControlGrid"
                  Grid.Column="5"
                  Grid.Row="0"
                  Margin="0,0,0,70">
                <Button Name="ButtonMinimize" 
                        Grid.Column="0" 
                        Style="{DynamicResource DefaultWindowButton}"
                        Content="0"
                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                <Button Name="ButtonMaximize" 
                        Grid.Column="1" 
                        Style="{DynamicResource DefaultWindowButton}"
                        Content="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState, Converter={StaticResource WindowStateToWingdingsConverter}}"
                        Command="{x:Static SystemCommands.MaximizeWindowCommand}"/>
                <Button Name="ButtonClose" 
                        Grid.Column="2" 
                        Content="r"
                        Style="{DynamicResource CloseWindowButton}"
                        Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            </Grid>

            <Control Name="ControlLoadingAnim"
                     Visibility="{Binding LoadingVisibility, UpdateSourceTrigger=PropertyChanged, FallbackValue=Collapsed}"
                     Cursor="Wait"
                     Grid.ColumnSpan="2"
                     Grid.RowSpan="2"
                     Margin="0,100,0,0"
                     VerticalAlignment="Stretch"
                     HorizontalAlignment="Stretch"
                     Style="{StaticResource LoadingAnimation}"/>
        </Grid>
    </Border>
</Window>